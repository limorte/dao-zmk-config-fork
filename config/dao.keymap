/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3


&lt { quick_tap_ms = <150>; };//150
&mt { quick_tap_ms = <150>; };//150
//&kscan0 {
//    debounce-press-ms = <10>;
//    debounce-release-ms = <10>;
//};

/ {
    chosen {
        zmk,physical_layout = &dao_crkbd_layout;
        // zmk,physical_layout = &dao_full_layout;
    };
};

/ {
//    behaviors {
//        tdF: tap_dance_lang1 {
//            compatible = "zmk,behavior-tap-dance";
//            #binding-cells = <0>;
//            tapping-term-ms = <200>;
//            bindings = <&kp F>, <&kp LG(F11)>;
//        };
//        tdJ: tap_dance_lang2 {
//            compatible = "zmk,behavior-tap-dance";
//            #binding-cells = <0>;
//            tapping-term-ms = <200>;
//            bindings = <&kp J>, <&kp LG(F12)>;
//        };
//        //lh_pht: left_positional_hold_tap {
//        //    compatible = "zmk,behavior-hold-tap";
//        //    #binding-cells = <2>;
//        //    flavor = "tap-unless-interrupted";
//        //    tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
//        //    quick-tap-ms = <200>;
//        //    bindings = <&kp>, <&kp>;
//        //    hold-trigger-key-positions = <0 1 2 3 4 5>;    // <---[[right-hand keys]]
//        //};
//    };


    combos {
        compatible = "zmk,combos";

        ChLangLeft {
            bindings = <&kp LG(F11)>;
            key-positions = <27 28>;
            timeout-ms = <20>;
        };

        ChLangRight {
            bindings = <&kp LG(F12)>;
            key-positions = <31 32>;
            timeout-ms = <20>;
        };

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
            timeout-ms = <20>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
            timeout-ms = <20>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
            timeout-ms = <20>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
            timeout-ms = <20>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
            timeout-ms = <20>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
            timeout-ms = <20>;
        };

        DoubleQuote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <15 16>;
            timeout-ms = <20>;
        };

        SingleQuote {
            bindings = <&kp APOSTROPHE>;
            key-positions = <fb>;
            timeout-ms = <20>;
        };

        //LangRu {
        //    bindings = <&kp LG(F11)>;
        //    key-positions = <0 1>;
        //    timeout-ms = <20>;
        //};

        //LangUs {
        //   bindings = <&kp LG(F12)>;
        //    key-positions = <10 11>;
        //    timeout-ms = <20>;
        //};

        //LangRuL {
        //    bindings = <&kp LG(F11)>;
        //    key-positions = <36 38>;
        //    timeout-ms = <20>;
        //};

        //LangUsL {
        //    bindings = <&kp LG(F12)>;
        //    key-positions = <39 41>;
        //    timeout-ms = <20>;
        //};

        TildaSign {
            bindings = <&kp TILDE>;
            key-positions = <0 12>;
            timeout-ms = <20>;
        };

        GraveSign {
            bindings = <&kp GRAVE>;
            key-positions = <12 24>;
            timeout-ms = <20>;
        };

        MinusSign {
            bindings = <&kp MINUS>;
            key-positions = <3 4>;
            timeout-ms = <20>;
        };

        PlusSign {
            bindings = <&kp PLUS>;
            key-positions = <2 3>;
            timeout-ms = <20>;
        };

        UnderscoreSign {
            bindings = <&kp UNDERSCORE>;
            key-positions = <7 8>;
            timeout-ms = <20>;
        };

        PipeSign {
            bindings = <&kp PIPE>;
            key-positions = <8 9>;
            timeout-ms = <20>;
        };
    };
};

/ {
     keymap {
        compatible = "zmk,keymap";


        default_layer {
            display-name = "MAIN";
            bindings = <
      &kp ESC   &kp Q   &kp W     &kp E   &kp R        &kp T              &kp Y      &kp U          &kp I    &kp O     &kp P         &kp LEFT_BRACKET
 &mt LALT TAB   &kp A   &kp S     &kp D   &tdF         &kp G              &kp H      &tdJ           &kp K    &kp L  &kp SEMI                 &kp APOS
    &kp LSHFT   &kp Z   &kp X     &kp C   &kp V        &kp B              &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt LCTRL RIGHT_BRACKET
                               &kp LGUI   &mo 1  &lt 2 ENTER          &kp SPACE  &kp RSHFT  &kp BACKSPACE
            >;
        };

        layer_NUM_LAYER {
            display-name = "NUM";
            bindings = <
      &kp GRAVE           &kp N1       &kp N2    &kp N3          &kp N4            &kp N5                     &kp N6           &kp N7        &kp N8                &kp N9                 &kp N0      &kp BACKSLASH
   &kp LEFT_ALT  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR       &kp PERCENT                  &kp CARET    &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS           &kp PIPE
 &kp LEFT_SHIFT        &kp TILDE    &kp MINUS  &kp PLUS  &kp LEFT_BRACE  &kp LEFT_BRACKET          &kp RIGHT_BRACKET  &kp RIGHT_BRACE     &kp EQUAL        &kp UNDERSCORE                  &none  &kp RIGHT_CONTROL
                                                 &trans          &trans             &mo 3                     &trans           &trans        &trans
            >;
        };

        layer_NAVI_LAYER {
            display-name = "NAVI";
            bindings = <
   &kp LG(TILDE)     &kp LS(LC(TAB))     &kp LC(TAB)    &kp UP    &kp PAGE_UP    &kp C_VOL_UP             &none    &kp PAGE_UP    &kp UP   &none  &none             &none
   &kp LEFT_ALT  &kp HOME  &kp LEFT  &kp DOWN      &kp RIGHT  &kp END          &kp HOME       &kp LEFT  &kp DOWN  &kp RIGHT   &kp END              &none
 &kp LEFT_SHIFT     &none     &none     &none  &kp PAGE_DOWN    &kp C_VOL_DN             &none  &kp PAGE_DOWN     &none      &none     &none  &kp RIGHT_CONTROL
                                       &trans          &mo 3   &trans            &trans         &trans   &kp DEL
            >;
        };

        layer_ADJUST_LAYER {
            display-name = "ADJ";
            bindings = <
     &bootloader   &studio_unlock         &none         &none         &none         &none           &none   &none   &none   &none   &studio_unlock   &bootloader
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4           &none   &none   &none   &none   &none   &none
      &sys_reset         &none         &none         &none         &none         &none           &none   &none   &none   &none   &none   &sys_reset
                                                &none        &trans        &trans           &none   &none   &none
            >;
        };

    };
};
